== Instructions

These instructions shoe how to get joint positions into HAL. Example video:
link:https://youtu.be/b4O2KU2bLWE[machinekit driven by ros joint states 2016 01 10 15 20 ]

=== Prerequisits

Installation of:

* ROS
* Machinekit development setup
* https://github.com/cdsteinkuehler/ros_hal_tests
* a ROS publisher `/joint_path_command` to which the `listener` node from
  `ros_hal_tests` can subscribe to

* depending on the hardware you will need to use
  link:https://github.com/luminize/machinekit/tree/hostmot-remove-params2[this machinekit branch (no support !!!)]
  which uses pins instead of params for the mesa hardware stepgen. BEWARE only
  tested on a mesa 5i20 card. YMMV


=== Usage

==== 1
install the component from link:https://github.com/cdsteinkuehler/ros_hal_tests[ros_hal_tests]
with the command `comp --install joint_stream.comp`

==== 2
Start HAL in a new terminal with `halrun`. A running HAL is needed for
../scripts/halfile.py to set up a configuration from python with the
Machinekit Cython bindings.

```
bas@xw6600:~$ halrun
msgd:0 stopped
rtapi:0 stopped
halcmd:
```
now type `start` in terminal to start the RT threads (of which there are none ATM)

==== 3
load the HAL configuration
```
cd {wherever it's located}/ros_hello_machinekit/scripts
python halfile.py
```

==== 4
start whatever ROS robot you are running as long as there is a `/joint_path_command`
topic to attach to

==== 5
`rosrun listener listener.py` will listen to messages of type `JointTrajectory`
and put those into the ringbuffer link:https://github.com/luminize/ros_hello_machinekit/blob/master/scripts/halfile.py#L24[jointpos]
where the joint_stream component attaches to this ringbuffer
link:https://github.com/luminize/ros_hello_machinekit/blob/master/scripts/halfile.py#L26[here]

==== 6
optional, get the joint position in halscope (if you don't have hardware)
```
halscope -i ros.halscope &
```
select `joint_stream.joint.00.pos-cmd` for the first channel
set `Run Mode` to `Roll` and move your joints.

image::./halscope.png[]
